using System;
using System.Collections.ObjectModel;
using System.Threading.Tasks;
using AutoSchedule.Core.Models;
using System.Collections.Generic;
using AutoSchedule.UI.Models;
using Priority_Queue;
using PriorityQueue = Priority_Queue.SimplePriorityQueue<AutoSchedule.Core.Models.Course, AutoSchedule.Core.Models.Priority>;

namespace AutoSchedule.UI.Services
{
    public class AppDataService
    {
        /// <summary>
        /// Currently selected schedule.
        /// </summary>
        public Schedule CurrentSchedule = new();
        public readonly ObservableCollection<string> FilteredClasses = new();
        public readonly ObservableCollection<PriorityClass> SelectedClasses = new();
        /// <summary>
        /// All available schedules generated by ClassSelector.
        /// </summary>
        public readonly ObservableCollection<Schedule> AvailableSchedules = new();

        public readonly List<Course> FinalSelectedClasses = new();

        public string SearchBoxText = string.Empty;

        /// <summary>
        /// Indicates whether the service is initialized.
        /// </summary>
        public bool Initialized = false;

        public async Task InitializeAsync(AppDataServiceSingleton appDataServiceSingleton)
        {
            if (!Initialized)
            {
                await appDataServiceSingleton.InitializeAsync();
                foreach (string item in appDataServiceSingleton.AvailableClasses) FilteredClasses.Add(item);
                Initialized = true;

#if DEBUG
                Console.WriteLine("DataService initialized.");
#endif
            }
        }
    }
}
